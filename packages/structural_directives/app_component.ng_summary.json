{
  "ngDeps": {
    "1": "",
    "3": [
      {
        "1": "package:angular2/angular2.dart",
        "5": false
      },
      {
        "1": "package:angular_components/angular_components.dart",
        "5": false
      },
      {
        "1": "src/hero.dart",
        "5": false
      },
      {
        "1": "src/unless_directive.dart",
        "5": false
      },
      {
        "1": "src/hero_switch_components.dart",
        "5": false
      }
    ],
    "5": [
      {
        "1": "AppComponent",
        "7": [
          {
            "2": "COMMON_DIRECTIVES"
          },
          {
            "2": "heroSwitchComponents"
          },
          {
            "2": "materialDirectives"
          },
          {
            "2": "UnlessDirective"
          }
        ]
      }
    ],
    "6": "app_component.dart"
  },
  "type": {
    "AppComponent": {
      "class": "Directive",
      "isComponent": true,
      "selector": "my-app",
      "exportAs": null,
      "type": {
        "class": "Type",
        "name": "AppComponent",
        "moduleUrl": "asset:structural_directives/lib/app_component.dart",
        "prefix": null,
        "isHost": false,
        "value": null,
        "diDeps": []
      },
      "changeDetection": 6,
      "inputs": {},
      "inputTypes": {},
      "outputs": {},
      "hostListeners": {},
      "hostProperties": {},
      "hostAttributes": {},
      "lifecycleHooks": [],
      "template": {
        "encapsulation": 0,
        "template": "<h1>Structural Directives</h1>\n\n<p>Conditional display of hero</p>\n\n<blockquote>\n<div *ngIf=\"hero != null\" >{{hero.name}}</div>\n</blockquote>\n\n<p>List of heroes</p>\n\n<ul>\n  <li *ngFor=\"let hero of heroes\">{{hero.name}}</li>\n</ul>\n\n\n<hr>\n\n<h2 id=\"ngIf\">NgIf</h2>\n\n<p *ngIf=\"true\">\n  Expression is true and ngIf is true.\n  This paragraph is in the DOM.\n</p>\n<p *ngIf=\"false\">\n  Expression is false and ngIf is false.\n  This paragraph is not in the DOM.\n</p>\n\n<p [style.display]=\"'block'\">\n  Expression sets display to \"block\".\n  This paragraph is visible.\n</p>\n<p [style.display]=\"'none'\">\n  Expression sets display to \"none\".\n  This paragraph is hidden but still in the DOM.\n</p>\n\n<h4>NgIf with template</h4>\n<p>&lt;template&gt; element</p>\n<template [ngIf]=\"hero != null\">\n  <div>{{hero.name}}</div>\n</template>\n\n<p>template attribute</p>\n<div template=\"ngIf hero != null\">{{hero.name}}</div>\n\n<hr>\n\n<a id=\"ng-container\"></a>\n<h2 id=\"template\">&lt;template&gt;</h2>\n\n<h4>*ngIf with a &lt;template&gt;</h4>\n\n<button (click)=\"hero = hero != null ? null : heroes[0]\">Toggle hero</button>\n\n<p>\n  I turned the corner\n  <template [ngIf]=\"hero != null\">\n    and saw {{hero.name}}. I waved\n  </template>\n  and continued on my way. [template]\n</p>\n<!-- No ng-container yet:\n<p>\n  I turned the corner\n  <ng-container *ngIf=\"hero != null\">\n    and saw {{hero.name}}. I waved\n  </ng-container>\n  and continued on my way.\n</p>\n-->\n<p>\n  I turned the corner\n  <span *ngIf=\"hero != null\">\n    and saw {{hero.name}}. I waved\n  </span>\n  and continued on my way.\n</p>\n\n<p><i>&lt;select&gt; with &lt;span&gt;</i></p>\n<div>\n  Pick your favorite hero\n  (<label><input type=\"checkbox\" checked (change)=\"showSad = !showSad\">show sad</label>)\n</div>\n<select [(ngModel)]=\"hero\">\n  <span *ngFor=\"let h of heroes\">\n    <span *ngIf=\"showSad || h.emotion !== 'sad'\">\n      <option [ngValue]=\"h\">{{h.name}} ({{h.emotion}})</option>\n    </span>\n  </span>\n</select>\n\n<p><i>&lt;select&gt; with &lt;template&gt;</i></p>\n<div>\n  Pick your favorite hero 2\n  (<label><input type=\"checkbox\" checked (change)=\"showSad = !showSad\">show sad</label>)\n</div>\n<select [(ngModel)]=\"hero\">\n  <template ngFor let-h [ngForOf]=\"heroes\">\n    <template [ngIf]=\"showSad || h.emotion !== 'sad'\">\n      <option [ngValue]=\"h\">{{h.name}} ({{h.emotion}})</option>\n    </template>\n  </template>\n</select>\n\n<!--\n<p><i>&lt;select&gt; with &lt;ng-container&gt;</i></p>\n<div>\n  Pick your favorite hero\n  (<label><input type=\"checkbox\" checked (change)=\"showSad = !showSad\">show sad</label>)\n</div>\n<select [(ngModel)]=\"hero\">\n  <ng-container *ngFor=\"let h of heroes\">\n    <ng-container *ngIf=\"showSad || h.emotion !== 'sad'\">\n      <option [ngValue]=\"h\">{{h.name}} ({{h.emotion}})</option>\n    </ng-container>\n  </ng-container>\n</select>\n-->\n<br><br>\n\n<hr>\n\n<h2 id=\"ngFor\">NgFor</h2>\n\n<div class=\"box\">\n\n<p class=\"code\">&lt;div *ngFor=\"let hero of heroes; let i=index; let odd=odd; trackBy: trackById\" [class.odd]=\"odd\"&gt;</p>\n<div *ngFor=\"let hero of heroes; let i=index; let odd=odd; trackBy: trackById\"\n     [class.odd]=\"odd\">\n  ({{i}}) {{hero.name}}\n</div>\n\n<p class=\"code\">&lt;div template=\"ngFor let hero of heroes; let i=index; let odd=odd; trackBy: trackById\" [class.odd]=\"odd\"&gt;</p>\n<div template=\"ngFor let hero of heroes; let i=index; let odd=odd; trackBy: trackById\"\n     [class.odd]=\"odd\">\n  ({{i}}) {{hero.name}}\n</div>\n\n<p class=\"code\">&lt;template ngFor let-hero [ngForOf]=\"heroes\" let-i=\"index\" let-odd=\"odd\" [ngForTrackBy]=\"trackById\"&gt;</p>\n<template ngFor let-hero [ngForOf]=\"heroes\" let-i=\"index\" let-odd=\"odd\"\n          [ngForTrackBy]=\"trackById\">\n  <div [class.odd]=\"odd\">({{i}}) {{hero.name}}</div>\n</template>\n\n</div>\n<hr>\n\n<h2 id=\"ngSwitch\">NgSwitch</h2>\n\n<div>Pick your favorite hero</div>\n\n<material-radio-group [(ngModel)]=\"hero\">\n  <material-radio *ngFor=\"let h of heroes\" [value]=\"h\">\n    {{h.name}}\n  </material-radio>\n  <material-radio>None of the above</material-radio>\n</material-radio-group>\n\n<h4>NgSwitch</h4>\n\n<div [ngSwitch]=\"hero?.emotion\">\n  <happy-hero    *ngSwitchCase=\"'happy'\"    [hero]=\"hero\"></happy-hero>\n  <sad-hero      *ngSwitchCase=\"'sad'\"      [hero]=\"hero\"></sad-hero>\n  <confused-hero *ngSwitchCase=\"'confused'\" [hero]=\"hero\"></confused-hero>\n  <unknown-hero  *ngSwitchDefault           [hero]=\"hero\"></unknown-hero>\n</div>\n\n<h4>NgSwitch with <i>template</i> attribute</h4>\n<div [ngSwitch]=\"hero?.emotion\">\n  <happy-hero    template=\"ngSwitchCase 'happy'\"    [hero]=\"hero\"></happy-hero>\n  <sad-hero      template=\"ngSwitchCase 'sad'\"      [hero]=\"hero\"></sad-hero>\n  <confused-hero template=\"ngSwitchCase 'confused'\" [hero]=\"hero\"></confused-hero>\n  <unknown-hero  template=\"ngSwitchDefault\"         [hero]=\"hero\"></unknown-hero>\n</div>\n\n<h4>NgSwitch with &lt;template&gt;</h4>\n<div [ngSwitch]=\"hero?.emotion\">\n  <template [ngSwitchCase]=\"'happy'\">\n    <happy-hero [hero]=\"hero\"></happy-hero>\n  </template>\n  <template [ngSwitchCase]=\"'sad'\">\n    <sad-hero [hero]=\"hero\"></sad-hero>\n  </template>\n  <template [ngSwitchCase]=\"'confused'\">\n    <confused-hero [hero]=\"hero\"></confused-hero>\n  </template >\n  <template ngSwitchDefault>\n    <unknown-hero [hero]=\"hero\"></unknown-hero>\n  </template>\n</div>\n\n<hr>\n\n<h2>&lt;template&gt;</h2>\n<p>Hip!</p>\n<template>\n  <p>Hip!</p>\n</template>\n<p>Hooray!</p>\n\n<hr>\n\n<h2 id=\"myUnless\">UnlessDirective</h2>\n<p>\n  The condition is currently\n  <span [ngClass]=\"{ a: !condition, b: condition, unless: true }\">{{condition}}</span>.\n  <button\n    (click)=\"condition = !condition\"\n    [ngClass] = \"{ a: condition, b: !condition }\" >\n    Toggle condition to {{condition ? 'false' : 'true'}}\n  </button>\n</p>\n<p *myUnless=\"condition\" class=\"unless a\">\n  (A) This paragraph is displayed because the condition is false.\n</p>\n\n<p *myUnless=\"!condition\" class=\"unless b\">\n  (B) Although the condition is true,\n  this paragraph is displayed because myUnless is set to false.\n</p>\n\n\n<h4>UnlessDirective with template</h4>\n\n<p *myUnless=\"condition\">Show this sentence unless the condition is true.</p>\n\n<p template=\"myUnless condition\" class=\"code unless\">\n  (A) &lt;p template=\"myUnless condition\" class=\"code unless\"&gt;\n</p>\n\n<template [myUnless]=\"condition\">\n  <p class=\"code unless\">\n    (A) &lt;template [myUnless]=\"condition\"&gt;\n  </p>\n</template>\n\n",
        "templateUrl": "asset:structural_directives/lib/app_component.html",
        "styles": [],
        "styleUrls": [
          "asset:structural_directives/lib/app_component.css"
        ],
        "ngContentSelectors": []
      },
      "providers": [
        {
          "class": "Identifier",
          "name": "materialProviders",
          "moduleUrl": null,
          "prefix": null,
          "value": null
        }
      ],
      "viewProviders": [],
      "queries": [],
      "viewQueries": []
    }
  },
  "alias": {}
}